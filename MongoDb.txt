--EMPLOYEEEE

1. Display employees whose gender is Male.
	db.employee.find({GENDER:{$eq:'Male'}})

2. Display employees who belong to London city.
	db.employee.find({CITY:{$eq:'London'}})

3. Display employees whose salary is greater than 3500.
	db.employee.find({SALARY:{$gt:3500}})

4. Display employees whose joining date is before 2015-01-01.
	db.employee.find({JOININGDATE:{$lt:'2015-01-01'}})

5. Display employees whose EID is greater than or equal to 7.
	db.employee.find({EID:{$gte:7}})

6. Display employees whose city is Landon or New York (use:IN)
	db.employee.find({CITY:{$in:['London' , 'New York']}})

7. Display employees who do not belongs to Landon or New York (use: NOT IN)
	db.employee.find({CITY:{$in:['London' , 'New York']}})

8. Display the EID of those employee who lives in city London.
	db.employee.find({CITY:{$eq:'London'}},{EID:1})

9. Display first 2 employee names who lives in New york.
	db.employee.find({CITY:{$eq:'New York'}}).limit(2)

10. Display next 2 employee after skipping first 2 whose city is London.
	db.employee.find({CITY:{$eq:'London'}}).skip(2).limit(2)

11. Display Male employees who lives Sydney.
	db.employee.find({$and:[{GENDER:'Male'} , {CITY:'Sydney'}]})

12. Display EID, ENAME, CITY and SALARY of those employees who belongs to London or Sydney.
	db.employee.find({$or:[{CITY:'London'} , {CITY:'Sydney'}]} , {EID:1 , ENAME:1 , CITY:1 , SALARY:1})

13. Display ENAME, SALARY, and CITY of those employee whose salary is more than 7000.
	db.employee.find({SALARY:{$gt:7000}} , {ENAME:1 , CITY:1 , SALARY:1})

14. Display documents whose name start with E.
	db.employee.find({ENAME: /^E/})

15. Display documents whose name starts with S or M in your collection
	

---------------------------------------------------------------------------------------------------------------------------------------------

--STUDENT

26. Display Female students.
	db.Student.find({GENDER:{$eq:'Female'}})

27. Display students who belong to Rajkot city.
	db.Student.find({CITY:{$eq:'Rajkot'}})

28. Display students studying in 7th sem.
	db.Student.find({SEM:{$eq:7}})

29. Display students not studying in 3rd sem.
	db.Student.find({SEM:{$ne:3}})

30. Display students whose roll no is greater than 107.
	db.Student.find({ROLLNO:{$gt:107}})

31. Display students whose city is Jamnagar or Baroda (use:IN)
	db.Student.find({CITY:{$in:['Jamnagar' , 'Baroda']}})

32. Display students whose fees is less than 9000.
	db.Student.find({FEES:{$lt:9000}})

33. Display the roll no of those students who belongs to Mechanical department.
	db.Student.find({DEPARTMENT:{$eq:'Mechanical'}}).count()

34. Display first 2 students names who lives in Baroda.
	db.Student.find({CITY:{$eq:'Baroda'}})

35. Display Male students who studying in 3rd sem.
	db.Student.find({$and:[{GENDER:'Male'} , {SEM:3}]})

36. Display sname and city and fees of those students whose roll no is less than 105.
	db.Student.find({ROLLNO:{$lt:105}} , {SNAME:1 , CITY:1 , FEES:1})

46. Display next 2 students after skipping first 2 whose city is Ahmedabad.
	db.Student.find({CITY:{$eq:'Ahmedabad'}}).skip(2).limit(2)

47. Display rollno, sname, fees, and department of those students who is from Baroda and belongs to CE 
department.
	db.Student.find({$and:[{CITY:'Baroda'} , {DEPARTMENT:'CE'}]} , {ROLLNO:1 , SNAME:1 , FEES:1 , DEPARTMENT:1})
	


